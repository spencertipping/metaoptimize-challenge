#!/usr/bin/perl

Method.
The idea here is to process the term-relation file in small batches. Each record is independent except for specifying relevance, and since relevance over the vector space of words is
isomorphic to real numbers, it inherits commutativity and associativity. Therefore, we can distribute the job in a map/reduce sort of way and aggregate the results hierarchically.

  File format.
  The files in the blocks/ directory each represent 1000 words from the vocabulary. They are in final output format, with the exception that each word is tagged with its observed frequency. So
  if the word 'foo' was seen with 'bar' 511 times, the record would look like this:

  | foo bar:511

  The rows are not necessarily sorted.

mkdir 'blocks';

my $split_every = 10000;

my $i = 0;
my %index;

my $write_a_block = sub {
  print STDERR "Writing block " . int($i / $split_every) . "\n";
  open my $block, '>', 'blocks/' . int($i / $split_every);

  for my $k (sort keys %index) {
    my %fs;
    ++$fs{$_} for @{$index{$k}};
    print $block "$k " . join(' ', map "$_:$fs{$_}", keys %fs) . "\n";
  }

  close $block;
  %index = ();
};

for (<>) {
  my ($w, @words) = split;
  push @{$index{$w} ||= []}, @words for @words;
  &$write_a_block() unless ++$i % $split_every;
}

&$write_a_block() if $i % $split_every;
